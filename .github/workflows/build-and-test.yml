name: CI

on: pull_request

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10" ]
        poetry-version: [ "1.5.1" ]


    env:
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      SQL_DB: testdb
      SQL_HOST: 127.0.0.1
      SQL_USER: postgres
      POSTGRES_PASSWORD: secret
      PGPASSWORD: secret
      SQL_CSEARCH_PATH: shakespeare
      SQL_DATASOURCE_NAME: my_gxshakezz

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: pass
          ACCEPT_EULA: Y
        ports:
          - 1433:1433

#      postgres:
#        image: postgres:14
#        env:
#          # must specify password for PG Docker container image, see: https://registry.hub.docker.com/_/postgres?tab=description&page=1&name=10
#          POSTGRES_PASSWORD: secret
#          POSTGRES_DB: testdb
#        ports:
#          - 5432:5432
#        # needed because the postgres container does not provide a health check
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Install SQL Server Tools
        run: |
          sudo curl https://packages.microsoft.com/keys/microsoft.asc  | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc
          sudo curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 mssql-tools18
          echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
          source ~/.bashrc
      - name: Restore database from backup
#        working-directory: /opt/mssql-tools18/bin
        run: ./sqlcmd -S mssql+pyodbc://sa:pass@localhost:1433/master?driver=ODBC+Driver+18+for+SQL+Server&TrustServerCertificate=yes -U sa -P 'pass' -d master -i /sqlserver/setup/restore.sql
        env:
          SA_PASSWORD: pass
          ACCEPT_EULA: Y
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Test Code Coverage
        run: poetry run coverage run -m pytest -v --cov=app --cov-report=xml
      - name: Coveralls
        uses: coverallsapp/github-action@v2


