name: Unit Tests

on: [ pull_request ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11" ]
      fail-fast: false

    env:
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      SQL_DB: testdb
      SQL_HOST: 127.0.0.1
      SQL_USER: postgres
      POSTGRES_PASSWORD: secret
      PGPASSWORD: secret

    services:
      postgres:
        image: postgres:14
        env:
          # must specify password for PG Docker container image, see: https://registry.hub.docker.com/_/postgres?tab=description&page=1&name=10
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a health check
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: <--- Checkout Codebase --->
        uses: actions/checkout@v3
        with:
          path: main
      - name: <--- Feed Database --->
#        run: psql -d postgresql://postgres@localhost/testdb -f db/shakespeare.sql
        run: pwd & ls -l

        env:
          PGPASSWORD: secret
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.11-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Test Code
        run: poetry run pytest



